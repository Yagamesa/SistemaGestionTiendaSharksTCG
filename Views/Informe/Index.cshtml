@model ProyectoMDGSharksWeb.Models.InformeViewModel
@using System.Text.Json

@{
    ViewData["Title"] = "Informe General";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var fechaDesde = ViewData["FechaDesde"] as string ?? "";
    var fechaHasta = ViewData["FechaHasta"] as string ?? "";
}

<style>
    .informe-container {
        background-color: #f8f9fa;
        border-radius: 20px;
        padding: 30px;
        max-width: 1200px;
        margin: auto;
    }

    .export-buttons {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-bottom: 20px;
    }

    .btn-export {
        font-size: 0.8rem;
        padding: 6px 12px;
        border-radius: 5px;
        color: white;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .btn-export-pdf {
        background-color: #dc3545;
    }

        .btn-export-pdf:hover {
            background-color: #b02a37;
        }

    .btn-export-excel {
        background-color: #28a745;
    }

        .btn-export-excel:hover {
            background-color: #1e7e34;
        }

    .filtro-fechas {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 10px;
        justify-content: center;
        margin-bottom: 25px;
    }

        .filtro-fechas label {
            margin-bottom: 0;
            font-weight: 600;
            color: #003366;
        }

        .filtro-fechas input[type="date"] {
            border-radius: 5px;
            border: 1px solid #ced4da;
            padding: 6px 10px;
            font-size: 0.9rem;
            width: 140px;
        }

        .filtro-fechas .btn-filtrar {
            background-color: #007bff;
            color: white;
            border-radius: 5px;
            border: none;
            padding: 7px 16px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .filtro-fechas .btn-filtrar:hover {
                background-color: #0056b3;
            }

        .filtro-fechas .btn-limpiar {
            background-color: #6c757d;
            color: white;
            border-radius: 5px;
            border: none;
            padding: 7px 16px;
            font-weight: 600;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

            .filtro-fechas .btn-limpiar:hover {
                background-color: #545b62;
            }
</style>

<div class="informe-container">
    <h2 class="text-center mb-4" style="color: #003366;">Informe General de Ventas</h2>

    <!-- Botones exportar arriba a la derecha -->
    <div class="export-buttons">
        <form asp-controller="Informe" asp-action="ExportarPDF" method="post">
            <input type="hidden" name="fechaDesde" value="@fechaDesde" />
            <input type="hidden" name="fechaHasta" value="@fechaHasta" />
            <button type="submit" class="btn-export btn-export-pdf">Exportar PDF</button>
        </form>
        <form asp-controller="Informe" asp-action="ExportarExcel" method="post">
            <input type="hidden" name="fechaDesde" value="@fechaDesde" />
            <input type="hidden" name="fechaHasta" value="@fechaHasta" />
            <button type="submit" class="btn-export btn-export-excel">Exportar Excel</button>
        </form>
    </div>

    <!-- Formulario filtros fechas -->
    <form method="get" asp-controller="Informe" asp-action="Index" class="filtro-fechas">
        <label for="fechaDesde">Desde:</label>
        <input type="date" id="fechaDesde" name="fechaDesde" value="@fechaDesde" />

        <label for="fechaHasta">Hasta:</label>
        <input type="date" id="fechaHasta" name="fechaHasta" value="@fechaHasta" />

        <button type="submit" class="btn-filtrar">Filtrar</button>
        <a href="@Url.Action("Index", "Informe")" class="btn-limpiar">Limpiar</a>
    </form>

    <!-- Gráficos y métricas principales (igual que antes) -->
    <div class="chart-container">
        <canvas id="ventasMensualesChart"></canvas>
    </div>

    <div class="chart-container">
        <canvas id="ventasAnualesChart"></canvas>
    </div>

    <div class="chart-container">
        <canvas id="productosMensualesChart"></canvas>
    </div>

    <hr class="section-divider" />

    <div class="row g-4 text-white">
        <div class="col-lg-3 col-md-6">
            <div class="card bg-primary shadow rounded-4">
                <div class="card-body text-center">
                    <h5 class="card-title">Total Ventas</h5>
                    <p class="fs-3">@Model.TotalVentas</p>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="card bg-info shadow rounded-4">
                <div class="card-body text-center">
                    <h5 class="card-title">Ingresos Totales</h5>
                    <p class="fs-3">$@Model.TotalIngresos.ToString("N2")</p>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="card bg-dark shadow rounded-4">
                <div class="card-body text-center">
                    <h5 class="card-title">Productos Vendidos</h5>
                    <p class="fs-3">@Model.TotalProductosVendidos</p>
                </div>
            </div>
        </div>
        <div class="col-lg-3 col-md-6">
            <div class="card bg-secondary shadow rounded-4">
                <div class="card-body text-center">
                    <h5 class="card-title">Clientes Atendidos</h5>
                    <p class="fs-3">@Model.TotalClientes</p>
                </div>
            </div>
        </div>
    </div>

    <hr class="section-divider" />

    <div class="row text-center">
        <div class="col-md-4 mb-3">
            <div class="card bg-white border-primary shadow-sm rounded-4">
                <div class="card-body">
                    <h5 class="text-primary">Producto Más Vendido</h5>
                    <p class="fs-4 text-dark">@Model.ProductoMasVendido</p>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <div class="card bg-white border-info shadow-sm rounded-4">
                <div class="card-body">
                    <h5 class="text-info">Producto Más Rentable</h5>
                    <p class="fs-4 text-dark">@Model.ProductoMasRentable</p>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-3">
            <div class="card bg-white border-dark shadow-sm rounded-4">
                <div class="card-body">
                    <h5 class="text-dark">Mejor Cliente</h5>
                    <p class="fs-4 text-dark">@Model.ClienteTop</p>
                </div>
            </div>
        </div>
    </div>

    <hr class="section-divider" />

   </div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const ventasMensualesLabels = @Html.Raw(JsonSerializer.Serialize(Model.VentasMensuales.Select(v => v.Mes)));
        const ventasMensualesData = @Html.Raw(JsonSerializer.Serialize(Model.VentasMensuales.Select(v => v.Total)));

        const ctxVM = document.getElementById('ventasMensualesChart').getContext('2d');
        new Chart(ctxVM, {
            type: 'bar',
            data: {
                labels: ventasMensualesLabels,
                datasets: [{
                    label: 'Ingresos por Mes',
                    data: ventasMensualesData,
                    backgroundColor: '#00bfff',
                    borderColor: '#003366',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function (value) {
                                return '$' + value;
                            }
                        }
                    }
                }
            }
        });

        const ventasAnualesDataRaw = @Html.Raw(JsonSerializer.Serialize(Model.VentasMensuales));
        const ventasPorAnio = {};
        ventasAnualesDataRaw.forEach(v => {
            const partes = v.Mes.split(' ');
            const anio = partes[partes.length - 1];
            ventasPorAnio[anio] = (ventasPorAnio[anio] || 0) + v.Total;
        });
        const ventasAnualesLabels = Object.keys(ventasPorAnio);
        const ventasAnualesData = Object.values(ventasPorAnio);

        const ctxVA = document.getElementById('ventasAnualesChart').getContext('2d');
        new Chart(ctxVA, {
            type: 'bar',
            data: {
                labels: ventasAnualesLabels,
                datasets: [{
                    label: 'Ingresos por Año',
                    data: ventasAnualesData,
                    backgroundColor: '#28a745',
                    borderColor: '#155724',
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function (value) {
                                return '$' + value;
                            }
                        }
                    }
                }
            }
        });

        const productosMensualesLabels = ventasMensualesLabels;
        const productosMensualesData = ventasMensualesData.map(x => Math.round(x / 100));

        const ctxPM = document.getElementById('productosMensualesChart').getContext('2d');
        new Chart(ctxPM, {
            type: 'line',
            data: {
                labels: productosMensualesLabels,
                datasets: [{
                    label: 'Productos Vendidos (aprox.)',
                    data: productosMensualesData,
                    fill: false,
                    borderColor: '#ff5733',
                    tension: 0.3,
                    pointBackgroundColor: '#c70039',
                    borderWidth: 2
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });
    </script>
}
